[["/Users/ryuwoong/Programming/chagok/src/Page/Login/Login.test.tsx",{"fileContent":"import React from 'react';\nimport renderer from 'react-test-renderer';\nimport Login from './Login';\n\ndescribe('Login Page Test', () => {\n  it('should render correctly', () => {\n    let props: any;\n    const tree = renderer.create(<Login {...props} />).toJSON();\n    expect(tree).toMatchSnapshot();\n\n    // expect(getByText('Apple로 로그인')).toBeTruthy();\n    // expect(getByText('Google로 로그인')).toBeTruthy();\n    // expect(getByText('손님으로 로그인')).toBeTruthy();\n  });\n});\n","resolvedModuleNames":["/Users/ryuwoong/Programming/chagok/src/Page/Login/Login.tsx","/Users/ryuwoong/Programming/chagok/src/Style/Global.ts","/Users/ryuwoong/Programming/chagok/src/Navigation/navigation.d.ts","/Users/ryuwoong/Programming/chagok/src/Utils/DB.ts","/Users/ryuwoong/Programming/chagok/src/Page/Login/Component/GoogleLoginButton.tsx","/Users/ryuwoong/Programming/chagok/src/Page/Login/Component/AppleLoginButton.tsx","/Users/ryuwoong/Programming/chagok/src/Page/Login/Component/LottieLogin.tsx","/Users/ryuwoong/Programming/chagok/src/Page/Login/Component/GuestLoginButton.tsx","/Users/ryuwoong/Programming/chagok/src/Component/Modal/LoadingModal.tsx/LoadingModal.tsx"]}],["/Users/ryuwoong/Programming/chagok/src/Page/Login/Login.tsx",{"fileContent":"import React, {useCallback, useEffect, useState} from 'react';\nimport {Container} from '~/Style/Global';\n\nimport styled from '@emotion/native';\nimport auth, {FirebaseAuthTypes} from '@react-native-firebase/auth';\nimport {NativeStackScreenProps} from '@react-navigation/native-stack';\nimport {MainNavigationParamList} from '~/Navigation/navigation';\nimport {initialData, userDB} from '~/Utils/DB';\nimport GoogleLoginButton from './Component/GoogleLoginButton';\nimport AppleLoginButton from './Component/AppleLoginButton';\n\nimport {Platform} from 'react-native';\nimport LottieLogin from './Component/LottieLogin';\nimport GuestLoginButton from './Component/GuestLoginButton';\nimport LoadingModal from '~/Component/Modal/LoadingModal.tsx/LoadingModal';\n\ntype LoginPageProps = NativeStackScreenProps<MainNavigationParamList, 'Login'>;\n\ninterface Props {\n  navigation: LoginPageProps['navigation'];\n}\n\nfunction Login({navigation}: Props) {\n  const [isLoading, setLoading] = useState(false);\n\n  const reqSign = useCallback(\n    (uid: string, email: string) => {\n      const fbUserDBContext = userDB(uid);\n      fbUserDBContext.once('value', data => {\n        // data가 없다면 유저가 처음 로그인한 것이므로 초기 데이터를 넣어줍니다.\n        if (!data.exists()) {\n          fbUserDBContext.set(initialData(email));\n        }\n        setLoading(false);\n        // 메인 화면으로 로그인 처리.\n      });\n      setTimeout(() => {\n        navigation.replace('Main');\n      }, 100);\n    },\n    [navigation],\n  );\n\n  const handleLogin = useCallback(\n    (user: FirebaseAuthTypes.User | null) => {\n      // User가 존재하지 않거나,\n      // 이미 로그인이 되어 있을 때 Debounce를 걸어 navigation을 여러번 실행시키는 것을 방지합니다.\n      if (!user || !user.uid) {\n        setLoading(false);\n        return;\n      }\n      const {uid, email} = user;\n      reqSign(uid, email ?? 'guest');\n    },\n    [reqSign],\n  );\n\n  useEffect(() => {\n    auth().onAuthStateChanged(user => {\n      // Firebase로그인이 되거나 로그아웃 되면 동작합니다.\n      handleLogin(user);\n    });\n  }, [handleLogin]);\n\n  return (\n    <Container>\n      <LottieGroup>\n        <LottieLogin />\n      </LottieGroup>\n      <ButtonGroup>\n        <GoogleLoginButton setLoading={setLoading} />\n        {Platform.OS === 'ios' && <AppleLoginButton setLoading={setLoading} />}\n        <GuestLoginButton setLoading={setLoading} />\n      </ButtonGroup>\n      <LoadingModal visible={isLoading} />\n    </Container>\n  );\n}\n\nconst LottieGroup = styled.View`\n  flex: 3;\n  align-items: center;\n  padding: 20px;\n`;\n\nconst ButtonGroup = styled.View`\n  flex: 1;\n  justify-content: flex-end;\n  padding-horizontal: 20px;\n  padding-vertical: 25%;\n  gap: 10px;\n`;\n\nexport default Login;\n","resolvedModuleNames":["/Users/ryuwoong/Programming/chagok/src/Style/Global.ts","/Users/ryuwoong/Programming/chagok/src/Navigation/navigation.d.ts","/Users/ryuwoong/Programming/chagok/src/Utils/DB.ts","/Users/ryuwoong/Programming/chagok/src/Page/Login/Component/GoogleLoginButton.tsx","/Users/ryuwoong/Programming/chagok/src/Page/Login/Component/AppleLoginButton.tsx","/Users/ryuwoong/Programming/chagok/src/Page/Login/Component/LottieLogin.tsx","/Users/ryuwoong/Programming/chagok/src/Page/Login/Component/GuestLoginButton.tsx","/Users/ryuwoong/Programming/chagok/src/Component/Modal/LoadingModal.tsx/LoadingModal.tsx","/Users/ryuwoong/Programming/chagok/types/chagok.d.ts","/Users/ryuwoong/Programming/chagok/src/Utils/constant.ts","/Users/ryuwoong/Programming/chagok/src/Component/Button/UI/Long.tsx","/Users/ryuwoong/Programming/chagok/src/Asset/Lottie/money.json"]}],["/Users/ryuwoong/Programming/chagok/src/Style/Global.ts",{"fileContent":"import styled from '@emotion/native';\n\nconst Container = styled.SafeAreaView`\n  flex: 1;\n  background-color: ${({theme}) => theme.backgroundColor};\n`;\n\nconst Content = styled.View`\n  flex: 1;\n`;\n\nexport {Container, Content};\n","resolvedModuleNames":[]}],["/Users/ryuwoong/Programming/chagok/__tests__/App-test.tsx",{"fileContent":"/**\n * @format\n */\n\nimport 'react-native';\nimport React from 'react';\nimport App from '../App';\n\n// Note: test renderer must be required after react-native.\nimport renderer from 'react-test-renderer';\n\nit('renders correctly', () => {\n  renderer.create(<App />);\n});\n","resolvedModuleNames":["/Users/ryuwoong/Programming/chagok/App.tsx","/Users/ryuwoong/Programming/chagok/src/Utils/Hooks/ThemeContext.ts","/Users/ryuwoong/Programming/chagok/src/Navigation/MainNavigation.tsx","/Users/ryuwoong/Programming/chagok/src/Style/Theme.ts","/Users/ryuwoong/Programming/chagok/src/Utils/Hooks/useTheme.ts"]}],["/Users/ryuwoong/Programming/chagok/App.tsx",{"fileContent":"import React, {useEffect} from 'react';\nimport {ThemeProvider} from '@emotion/react';\nimport {GoogleSignin} from '@react-native-google-signin/google-signin';\nimport {NavigationContainer} from '@react-navigation/native';\nimport SplashScreen from 'react-native-splash-screen';\n\nimport {WEBCLIENT_ID} from '@env';\n\nimport ThemeContext from '~/Utils/Hooks/ThemeContext';\nimport MainNavigation from './src/Navigation/MainNavigation';\nimport theme from './src/Style/Theme';\nimport useTheme from './src/Utils/Hooks/useTheme';\n\nfunction App() {\n  const {ThemeMode, toggleTheme} = useTheme();\n\n  useEffect(() => {\n    // App Start Initialize\n    setTimeout(() => {\n      SplashScreen.hide();\n    }, 2000);\n\n    GoogleSignin.configure({\n      webClientId: WEBCLIENT_ID,\n    });\n  }, []);\n\n  return (\n    <ThemeProvider theme={theme[ThemeMode]}>\n      <ThemeContext.Provider value={{ThemeMode, toggleTheme}}>\n        <NavigationContainer>\n          <MainNavigation />\n        </NavigationContainer>\n      </ThemeContext.Provider>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","resolvedModuleNames":["/Users/ryuwoong/Programming/chagok/src/Utils/Hooks/ThemeContext.ts","/Users/ryuwoong/Programming/chagok/src/Navigation/MainNavigation.tsx","/Users/ryuwoong/Programming/chagok/src/Style/Theme.ts","/Users/ryuwoong/Programming/chagok/src/Utils/Hooks/useTheme.ts","/Users/ryuwoong/Programming/chagok/src/Page/Login/Login.tsx","/Users/ryuwoong/Programming/chagok/src/Navigation/BottomNavigation.tsx","/Users/ryuwoong/Programming/chagok/src/Navigation/navigation.d.ts","/Users/ryuwoong/Programming/chagok/src/Page/SpendForm/SpendForm.tsx","/Users/ryuwoong/Programming/chagok/src/Page/Account/Account.tsx","/Users/ryuwoong/Programming/chagok/src/Style/Palette.ts"]}]]